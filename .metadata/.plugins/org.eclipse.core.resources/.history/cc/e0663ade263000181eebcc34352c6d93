package actions.login_Page_Action;

import static org.testng.Assert.assertEquals;
import static org.testng.Assert.assertTrue;

import org.openqa.selenium.Alert;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;

import commonMethods.WebTextBox;
import componentFunctions.GetPropertyValue;
import locators.login_Page_Locator.Login_Page_Locator;

public class Login_Page_Action {
	
	public WebDriver driver = null;
	//String fileName = "config.properties";
	String fileName = "TestData.xlsx";
	WebElement ele = null;
	GetPropertyValue getPropValue = new GetPropertyValue();
	Login_Page_Locator loginPL = null;
	
	public Login_Page_Action(WebDriver driver){
		this.driver = driver;
	}
	
	public void verifyLoginPageTitle(){
		
		Assert.assertEquals(driver.getTitle(), getPropValue.getPropertyValues(fileName, "loginPageTitle"));
		System.out.println("Login page verified");
	}
	
	public void verifyUserNameIsNull(){
		loginPL = PageFactory.initElements(driver, Login_Page_Locator.class);
		ele = loginPL.getUserName();
		
		Assert.assertEquals(ele.getText(), "");
	}
	
	public void enterUserName(){
		loginPL = PageFactory.initElements(driver, Login_Page_Locator.class);
		ele = loginPL.getUserName();
		
		if(ele != null){
			if(WebTextBox.enterKeys(ele, getPropValue.getPropertyValues(fileName, "userName")))
				System.out.println("Username enterd successfully");
		}
	}
	
	public void verifyUserName(){
		loginPL = PageFactory.initElements(driver, Login_Page_Locator.class);
		ele = loginPL.getUserName();
		
		if(ele != null){
			Assert.assertEquals(ele.getAttribute("value"),getPropValue.getPropertyValues(fileName, "userName"));
		}
	}
	
	public void verifyPasswordIsNull(){
		loginPL = PageFactory.initElements(driver,Login_Page_Locator.class);
		ele = loginPL.getPassword();
		
		Assert.assertEquals(ele.getText(), "");
	}
	
	public void enterPassword(){
		loginPL = PageFactory.initElements(driver, Login_Page_Locator.class);
		ele = loginPL.getPassword();
		
		if(ele != null){
			WebTextBox.enterKeys(ele, getPropValue.getPropertyValues(fileName, "password"));
		}
	}
	
	public void verifyPassword(){
		loginPL = PageFactory.initElements(driver, Login_Page_Locator.class);
		ele = loginPL.getPassword();
		
		if(ele != null ){
			Assert.assertEquals(ele.getAttribute("value"), getPropValue.getPropertyValues(fileName, "password"));;
		}
	}
	
	public void loginButtonClick(){
		loginPL = PageFactory.initElements(driver, Login_Page_Locator.class);
		ele = loginPL.getLoginButton();
		
		if(ele != null){
			ele.click();
		}
	}
	
	public void enterInvalidUserName(){
		loginPL = PageFactory.initElements(driver, Login_Page_Locator.class);
		ele = loginPL.getUserName();
		
		if(ele != null){
			WebTextBox.enterKeys(ele, getPropValue.getPropertyValues(fileName, "invalidUserName"));
		}
	}
	
	public void enterInvalidPassword(){
		loginPL = PageFactory.initElements(driver, Login_Page_Locator.class);
		ele = loginPL.getPassword();
		
		if(ele != null){
			WebTextBox.enterKeys(ele, getPropValue.getPropertyValues(fileName, "invalidPassword"));
		}
	}
	
	public void handleAlert(){
		Alert alert = driver.switchTo().alert();
		
		Assert.assertEquals(alert.getText(), getPropValue.getPropertyValues(fileName, "loginPageAlert"));
		
		alert.accept();
		
		WebDriverWait wait = new WebDriverWait(driver, 15); 
		wait.until(ExpectedConditions.titleContains(getPropValue.getPropertyValues(fileName, "loginPageTitle")));	
		
		}
	
	public void verifyManagerID(){
		loginPL = PageFactory.initElements(driver, Login_Page_Locator.class);
		
		ele = loginPL.getManagerID();
		
		if(ele != null){
			String fullManagerID = ele.getText();
			
			String[] managerID = fullManagerID.split(":");
			
			String displayText = managerID[1];
			
			assertEquals(displayText.substring(0, 3), "mngr");
			
			assertTrue(displayText.substring(4, displayText.length()- 1).matches("[0-9]+-"));
		}
	}
}
